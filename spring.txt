1-2. Spring의 개요~

	EJB Server - 웹 구현 (JSP Model 2)
	기능을 하나 구현하려면 -> 엄청난 단계를 거쳐야 했다 ...
	>> 성능이 자연히 떨어지게 됨 ...
	>> [겨울]에 빗대어 표현 
	>> 겨울이 끝나고 [봄]이 찾아 왔다. > Spring

	Spring은 일반적인 Java 문법을 사용하기 때문에
	간단하고, 진입장벽 낮음 << 맞니?

	POJO(Plain Old Java Object) : Spring의 모토임.
	>> 자바의 기본으로 돌아가자. (객체 지향을 기초로 한 설계 - 유지 보수에 용이)

1-2. Framework

	기능 구현에만 집중해서 빠르게 개발을 할 수 있도록 기초적인 [뼈대]를 제공
	
	Framework : 도구를 틀 안에서 개발자가 사용할 수 있게 함.
	Library(jar) : 사용자가 필요할 때 직접 호출해서 사용할 수 있도록 하는 도구

1-3. Spring vs Spring Boot

	Spring : 봄 / Spring Boot : 늦 봄
	
2. Spring의 구조 < 하나의 스프링 프로젝트를 만들어서 설명할 것.


	-	-	-	-	-	-

Java 프로그램 - DB 서버 연동 : JDBC
JDBC > ConnectionPool(Context.xml) > MyBatis

.jar 관리
Build Path > WEB-INF의 lib > maven(.jar 자동 관리 시스템)


	-	-	-	-	-	-

Spring MVC 패턴 + MyBatis + Maven + ...


	-	-	-	-	-	-

Java : 전 세계적으로 많이 사용
	개발자들이 본인이 만들어놓은 것을 공유
	소스 자체를 공유하지는 않지만, .jar 파일 만들어서 공유하는 문화
	.jar 파일 자동으로 관리해주는 시스템 : maven
	Maven 중앙저장소 : mvnrepository.com

Maven을 활용하면
	컴퓨터의 Maven 로컬 저장소 C:\Users\sdedu\.m2\repository 에 저장 됨.

Maven 중앙 저장소에 없는 것들 : 로컬 저장소 활용!
	우리가 만든 .jar파일 DBManager, HC 등 ...

	-	-	-	-	-	-


Maven 새로고침
	이클립스 상단 Window > showView > other > maven repositories > 우클 > Rebuild Index

	-	-	-	-	-	-

Maven Error
	이클립스 종료 > 로컬 저장소 삭제 > 이클립스 실행 > 다운 받을거 다시 받기.
	로컬 저장소 위치 에서 repository 폴더 자체 삭제.

	-	-	-	-	-	-

DB를 전날 사용했다 ? > 이클립스 실행 전 해당하는 Workspace 가서 .metadata .plugins .org.eclipse.datatools.sqltools.result 폴더 삭제

	
	-	-	-	-	-	-

  < Mapper.xml설정 >

C(insert), U(update), D(delete)
	parameterType
interface의 추상메소드 파라미터로 자바빈을 넣음
우리가 넣는 내용을 자바 빈 형식에 맞추어서 바꿔줌

R(select)
	resultType
DB에 있는 내용들을 하나하나 List<javabean>에 자동으로 넣어 줌!
	* where 조건절이 있는 경우 > parameterType + resultType 같이 사용!